// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: msg/pb/enum.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// 消息probuf反序列化的时候依赖创建struct
type TYPE int32

const (
	TYPE_TYPE_INVALID TYPE = 0
	TYPE_HELLO        TYPE = 1
	TYPE_ACK          TYPE = 2
	TYPE_NOTICE       TYPE = 3
	TYPE_TYPE_MAX     TYPE = 16
)

var TYPE_name = map[int32]string{
	0:  "TYPE_INVALID",
	1:  "HELLO",
	2:  "ACK",
	3:  "NOTICE",
	16: "TYPE_MAX",
}

var TYPE_value = map[string]int32{
	"TYPE_INVALID": 0,
	"HELLO":        1,
	"ACK":          2,
	"NOTICE":       3,
	"TYPE_MAX":     16,
}

func (x TYPE) String() string {
	return proto.EnumName(TYPE_name, int32(x))
}

func (TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e631eebb343af0e, []int{0}
}

// callee 调用的时候依赖找执行函数
type CallID int32

const (
	CallID_CAll_INVAL  CallID = 0
	CallID_CALL_NOTICE CallID = 1
	CallID_CALL_MAX    CallID = 16
)

var CallID_name = map[int32]string{
	0:  "CAll_INVAL",
	1:  "CALL_NOTICE",
	16: "CALL_MAX",
}

var CallID_value = map[string]int32{
	"CAll_INVAL":  0,
	"CALL_NOTICE": 1,
	"CALL_MAX":    16,
}

func (x CallID) String() string {
	return proto.EnumName(CallID_name, int32(x))
}

func (CallID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e631eebb343af0e, []int{1}
}

func init() {
	proto.RegisterEnum("pb.TYPE", TYPE_name, TYPE_value)
	proto.RegisterEnum("pb.CallID", CallID_name, CallID_value)
}

func init() { proto.RegisterFile("msg/pb/enum.proto", fileDescriptor_4e631eebb343af0e) }

var fileDescriptor_4e631eebb343af0e = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0x2d, 0x4e, 0xd7,
	0x2f, 0x48, 0xd2, 0x4f, 0xcd, 0x2b, 0xcd, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a,
	0x48, 0xd2, 0x72, 0xe3, 0x62, 0x09, 0x89, 0x0c, 0x70, 0x15, 0x12, 0xe0, 0xe2, 0x01, 0xd1, 0xf1,
	0x9e, 0x7e, 0x61, 0x8e, 0x3e, 0x9e, 0x2e, 0x02, 0x0c, 0x42, 0x9c, 0x5c, 0xac, 0x1e, 0xae, 0x3e,
	0x3e, 0xfe, 0x02, 0x8c, 0x42, 0xec, 0x5c, 0xcc, 0x8e, 0xce, 0xde, 0x02, 0x4c, 0x42, 0x5c, 0x5c,
	0x6c, 0x7e, 0xfe, 0x21, 0x9e, 0xce, 0xae, 0x02, 0xcc, 0x42, 0x3c, 0x5c, 0x1c, 0x60, 0x1d, 0xbe,
	0x8e, 0x11, 0x02, 0x02, 0x5a, 0xe6, 0x5c, 0x6c, 0xce, 0x89, 0x39, 0x39, 0x9e, 0x2e, 0x42, 0x7c,
	0x5c, 0x5c, 0xce, 0x8e, 0x39, 0x39, 0x10, 0x93, 0x04, 0x18, 0x84, 0xf8, 0xb9, 0xb8, 0x9d, 0x1d,
	0x7d, 0x7c, 0xe2, 0xa1, 0x1a, 0x19, 0x41, 0x1a, 0xc1, 0x02, 0x60, 0x8d, 0x4e, 0xe2, 0x27, 0x1e,
	0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0, 0x91, 0x1c, 0x23, 0x17, 0x53, 0x41, 0x52, 0x14,
	0xab, 0x9e, 0xbe, 0x75, 0x41, 0x52, 0x12, 0x1b, 0xd8, 0x91, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x66, 0xcd, 0x12, 0xd4, 0xb9, 0x00, 0x00, 0x00,
}
